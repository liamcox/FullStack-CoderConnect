[{"/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/index.js":"1","/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/App.js":"2","/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/components/layout/Navbar.js":"3","/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/components/layout/Landing.js":"4","/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/components/auth/Register.js":"5","/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/components/auth/Login.js":"6","/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/store.js":"7","/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/actions/alert.js":"8","/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/reducers/index.js":"9","/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/actions/types.js":"10","/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/reducers/alert.js":"11","/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/components/layout/Alert.js":"12"},{"size":221,"mtime":1610644852168,"results":"13","hashOfConfig":"14"},{"size":1323,"mtime":1610650619074,"results":"15","hashOfConfig":"14"},{"size":673,"mtime":1610646471008,"results":"16","hashOfConfig":"14"},{"size":943,"mtime":1610646566792,"results":"17","hashOfConfig":"14"},{"size":3251,"mtime":1610650337858,"results":"18","hashOfConfig":"14"},{"size":2179,"mtime":1610648764885,"results":"19","hashOfConfig":"14"},{"size":1110,"mtime":1610649068729,"results":"20","hashOfConfig":"14"},{"size":361,"mtime":1610649727810,"results":"21","hashOfConfig":"14"},{"size":114,"mtime":1610649364542,"results":"22","hashOfConfig":"14"},{"size":82,"mtime":1610649550061,"results":"23","hashOfConfig":"14"},{"size":438,"mtime":1610649379313,"results":"24","hashOfConfig":"14"},{"size":463,"mtime":1610650385383,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"5mo8p3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/index.js",[],["53","54"],"/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/App.js",[],"/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/components/layout/Navbar.js",[],"/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/components/layout/Landing.js",[],"/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/components/auth/Register.js",["55","56"],"import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { setAlert } from \"../../actions/alert\";\n// import { register } from \"../../actions/auth\";\nimport PropTypes from \"prop-types\";\n\nconst Register = ({ setAlert }) => {\n    const [formData, setFormData] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        password2: \"\",\n    });\n\n    const { name, email, password, password2 } = formData;\n\n    const onChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if (password !== password2) {\n            setAlert(\"passwords dont match\", \"danger\");\n        } else {\n            console.log(\"success\");\n        }\n    };\n\n    return (\n        <div>\n            <h1 className='large text-primary'>Sign Up</h1>\n            <p className='lead'>\n                <i className='fas fa-user' /> Create Your Account\n            </p>\n            <form className='form' onSubmit={onSubmit}>\n                <div className='form-group'>\n                    <input\n                        type='text'\n                        placeholder='Name'\n                        name='name'\n                        value={name}\n                        onChange={onChange}\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='email'\n                        placeholder='Email Address'\n                        name='email'\n                        value={email}\n                        onChange={onChange}\n                    />\n                    <small className='form-text'>\n                        This site uses Gravatar so if you want a profile image,\n                        use a Gravatar email\n                    </small>\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='password'\n                        placeholder='Password'\n                        name='password'\n                        value={password}\n                        onChange={onChange}\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='password'\n                        placeholder='Confirm Password'\n                        name='password2'\n                        value={password2}\n                        onChange={onChange}\n                    />\n                </div>\n                <input\n                    type='submit'\n                    className='btn btn-primary'\n                    value='Register'\n                />\n            </form>\n            <p className='my-1'>\n                Already have an account? <Link to='/login'>Sign In</Link>\n            </p>\n        </div>\n    );\n};\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    // register: PropTypes.func.isRequired,\n    // isAuthenticated: PropTypes.bool,\n};\n\n// const mapStateToProps = (state) => ({\n//     isAuthenticated: state.auth.isAuthenticated,\n// });\n\nexport default connect(null, { setAlert })(Register);\n","/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/components/auth/Login.js",["57","58","59","60"],"import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\n// import { setAlert } from \"../../actions/alert\";\n// import { register } from \"../../actions/auth\";\nimport PropTypes from \"prop-types\";\n\nconst Login = () => {\n    const [formData, setFormData] = useState({\n        email: \"\",\n        password: \"\",\n    });\n\n    const { email, password } = formData;\n\n    const onChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        console.log(\"success\");\n    };\n\n    return (\n        <div>\n            <h1 className='large text-primary'>Sign In</h1>\n            <p className='lead'>\n                <i className='fas fa-user' /> Sign into Your Account\n            </p>\n            <form className='form' onSubmit={onSubmit}>\n                <div className='form-group'>\n                    <input\n                        type='email'\n                        placeholder='Email Address'\n                        name='email'\n                        value={email}\n                        onChange={onChange}\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='password'\n                        placeholder='Password'\n                        name='password'\n                        value={password}\n                        onChange={onChange}\n                    />\n                </div>\n                <input\n                    type='submit'\n                    className='btn btn-primary'\n                    value='Login'\n                />\n            </form>\n            <p className='my-1'>\n                Don't have an account? <Link to='/register'>Sign Up</Link>\n            </p>\n        </div>\n    );\n};\n\n// Register.propTypes = {\n//     // setAlert: PropTypes.func.isRequired,\n//     register: PropTypes.func.isRequired,\n//     isAuthenticated: PropTypes.bool,\n// };\n\n// const mapStateToProps = (state) => ({\n//     isAuthenticated: state.auth.isAuthenticated,\n// });\n\nexport default Login;\n","/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/store.js",[],"/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/actions/alert.js",[],"/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/reducers/index.js",[],"/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/actions/types.js",[],"/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/reducers/alert.js",[],"/Users/liamcox/Desktop/Code-Projects/CoderConnect/frontend/src/components/layout/Alert.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"69","line":3,"column":16,"nodeType":"67","messageId":"68","endLine":3,"endColumn":24},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"70","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":17},{"ruleId":"65","severity":1,"message":"69","line":3,"column":16,"nodeType":"67","messageId":"68","endLine":3,"endColumn":24},{"ruleId":"65","severity":1,"message":"71","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":17},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'connect' is defined but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]